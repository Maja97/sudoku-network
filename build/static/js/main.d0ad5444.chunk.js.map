{"version":3,"sources":["assets/images/logo.png","assets/images/background_main.png","routes/routes.ts","constants/colors.ts","constants/fonts.ts","constants/mainTheme.ts","constants/auth.ts","helpers/navigation.ts","components/MainButton.tsx","constants/images.ts","assets/svgs/playful_cat.svg","screens/StartScreen.tsx","containers/StartContainer.tsx","redux/auth/authRedux.ts","redux/notification/notificationRedux.ts","redux/loading/loadingRedux.ts","redux/store.ts","types/User.ts","service/middlewares/clientMiddleware.ts","service/middlewares/errorMiddleware.ts","constants/loading.ts","service/middlewares/loadingMiddleware.ts","service/service.ts","service/axios.ts","helpers/auth.ts","assets/svgs/login_illustration.svg","components/LocalTextField.tsx","i18n/translations.ts","helpers/rules.ts","constants/rules.ts","screens/LoginScreen.tsx","containers/LoginContainer.tsx","containers/HomeContainer.tsx","assets/svgs/register_hello_illustration.svg","screens/RegisterScreen.tsx","containers/RegisterContainer.tsx","components/SudokuCell.tsx","components/SudokuBox.tsx","components/SudokuGrid.tsx","constants/sudokuTypes.ts","screens/NewSudokuScreen.tsx","helpers/sudokuConstraints.ts","helpers/game.ts","containers/NewSudokuContainer.tsx","routes/MainRouter.tsx","components/Notification.tsx","wrappers/AuthenticationWrapper.tsx","wrappers/LoadingWrapper.tsx","App.tsx","i18n/index.ts","reportWebVitals.ts","index.tsx"],"names":["Routes","colors","white","black","purple","darkPurple","lilac","lightestGrey","lightYellow","darkBlueGrey","fonts","blackItalic","bold","boldItalic","extraBold","extraBoldItalic","extraLight","extraLightItalic","italic","light","lightItalic","medium","mediumItalic","regular","semiBold","semiBoldItalic","thin","thinItalic","mainTheme","createMuiTheme","palette","background","default","typography","fontFamily","h1","fontSize","lineHeight","h2","h3","h4","h5","h6","ACCESS_TOKEN","REFRESH_TOKEN","RouteNames","Login","Start","Home","Register","New","NewSudoku","goToLogin","history","push","goToHomePage","replace","useStyles","makeStyles","button","backgroundColor","borderRadius","padding","color","textTransform","MainButton","text","onClick","type","classes","Button","className","images","logo","require","yellowBackground","root","position","top","backgroundImage","backgroundRepeat","backgroundPosition","backgroundSize","height","width","overflow","verticalAlign","title","paddingBottom","content","textAlign","display","flexDirection","alignItems","boxShadow","image","paddingTop","continue","textDecoration","intro","StartScreen","Box","px","py","Typography","noWrap","variant","component","to","src","cat","alt","StartContainer","useHistory","user","useSelector","state","auth","React","useEffect","navigateToLogin","useCallback","initialState","undefined","authSlice","createSlice","name","reducers","setUser","action","payload","removeUser","actions","authReducer","reducer","notification","message","shown","notificationSlice","showNotification","hideNotification","notificationReducer","loadingSlice","startLoading","stopLoading","loadingReducer","store","configureStore","loading","userFromJSON","maybe","Error","email","first_name","last_name","username","firstName","lastName","phone","userToJSON","Client","clientInstances","dispatch","password","this","post","res","localStorage","setItem","token","refreshToken","removeItem","getItem","userInfo","jwtDecode","readUserById","userID","userId","users","ErrorMiddleware","next","login","register","logout","checkToken","loadingKeys","LOGIN","REGISTER","LoadingMiddleware","responseBody","response","data","instances","forEach","service","get","url","AxiosInstance","then","body","put","delete","requests","axios","create","timeout","interceptors","use","a","error","catch","onTokenNotFound","accessToken","onTokenSuccess","setHeaders","request","config","headers","authorization","LocalTextField","placeholder","label","value","onChange","endAdornment","TextField","InputProps","style","translations","Object","keys","t","en","translation","reduce","acc","curr","MAX_LENGTH","loginRules","required","emailPattern","minLength","maxLength","pattern","rules","registerRules","emailWrapper","passwordWrapper","textfield","LoginScreen","handleSubmit","useTranslation","useState","showPassword","setShowPassword","errors","useFormContext","formState","toggleShowPassword","prev","login_title","Grid","container","item","md","defaultValue","loginFields","render","field","FormHelperText","IconButton","loginImage","LoginContainer","useDispatch","formMethods","useForm","onSubmit","decoded","HomeContainer","firstNameWrapper","nameErrors","marginRight","wrapper","RegisterScreen","register_title","registerFields","registerImage","RegisterContainer","err","console","log","square","textAlignLast","border","boxSizing","input","props","caretColor","cursor","focused","SudokuCell","cellValue","disabled","cellError","cellKey","onCellChange","control","inputProps","disableUnderline","e","parseInt","target","onFocus","select","box","marginLeft","marginTop","SudokuBox","index","map","boxRow","cell","boxCol","Math","floor","boxRows","size","boxColumns","left","float","clear","SudokuGrid","boxData","useMemo","Array","start","start2","slice","i","rows","breaks","includes","cellIndex","sudokuType","small","standard","xSudoku","NewSudokuScreen","sudokuTypeName","onTypeChange","onCheckUnique","justifyContent","FormControl","Select","values","MenuItem","checkForConstraints","grid","rowIndex","columnIndex","checkRow","checkColumn","checkBox","every","row","column","boxStartRow","boxStartColumn","x","solveSudoku","board","gridFilled","col","emptyPlace","flat","findIndex","from","length","_","number","isUnique","count","NewSudokuContainer","setData","setSudokuTypeName","setType","some","find","newType","fill","generateEmptyGrid","event","gridSize","copy","columnFromIndex","MainRouter","strict","exact","path","Notification","handleClose","Snackbar","autoHideDuration","open","onClose","ContentProps","AuthenticationWrapper","setLoading","at","useClasses","right","bottom","zIndex","hidden","spinner","LoadingWrapper","children","isLoading","CircularProgress","App","ThemeProvider","theme","CssBaseline","i18n","initReactI18next","init","resources","lng","keySeparator","interpolation","escapeValue","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d0ad5444.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.e5e3f3ea.png\";","export default __webpack_public_path__ + \"static/media/background_main.3fa0123d.png\";","enum Routes {\r\n  Login = \"/login\",\r\n  Start = \"/start\",\r\n  Home = \"/dashboard\",\r\n  Register = \"/register\",\r\n  NewSudoku = \"/new\",\r\n}\r\n\r\nexport const RouteNames = {\r\n  Login: Routes.Login,\r\n  Start: Routes.Start,\r\n  Home: Routes.Home,\r\n  Register: Routes.Register,\r\n  New: Routes.NewSudoku,\r\n};\r\n","const colors = {\r\n  white: \"#FFFFFF\",\r\n  black: \"#000000\",\r\n  purple: \"#a349a4\",\r\n  darkPurple: \"#573647\",\r\n  lilac: \"#BD93BD\",\r\n  lightestGrey: \"#e9e3f5\",\r\n  lightYellow: \"#f7f056\",\r\n  darkBlueGrey: \"#3f3d56\",\r\n};\r\n\r\nexport default colors;\r\n","const fonts = {\r\n  black: \"Poppins-Black\",\r\n  blackItalic: \"Poppins-BlackItalic\",\r\n  bold: \"Poppins-Bold\",\r\n  boldItalic: \"Poppins-BoldItalic\",\r\n  extraBold: \"Poppins-ExtraBold\",\r\n  extraBoldItalic: \"Poppins-ExtraBoldItalic\",\r\n  extraLight: \"Poppins-ExtraLight\",\r\n  extraLightItalic: \"Poppins-ExtraLightItalic\",\r\n  italic: \"Poppins-Italic\",\r\n  light: \"Poppins-Light\",\r\n  lightItalic: \"Poppins-LightItalic\",\r\n  medium: \"Poppins-Medium\",\r\n  mediumItalic: \"Poppins-MediumItalic\",\r\n  regular: \"Poppins-Regular\",\r\n  semiBold: \"Poppins-SemiBold\",\r\n  semiBoldItalic: \"Poppins-SemiBoldItalic\",\r\n  thin: \"Poppins-Thin\",\r\n  thinItalic: \"Poppins-ThinItalic\",\r\n};\r\n\r\nexport default fonts;\r\n","import { createMuiTheme } from \"@material-ui/core/styles\";\r\nimport colors from \"./colors\";\r\nimport fonts from \"./fonts\";\r\n\r\nconst mainTheme = createMuiTheme({\r\n  palette: {\r\n    background: {\r\n      default: colors.lightestGrey,\r\n    },\r\n  },\r\n  typography: {\r\n    fontFamily: fonts.regular,\r\n    h1: {\r\n      h1: {\r\n        fontSize: \"3.5rem\",\r\n        lineHeight: 1.5,\r\n      },\r\n      h2: {\r\n        fontSize: \"2.5rem\",\r\n        lineHeight: 1.5,\r\n      },\r\n      h3: {\r\n        fontSize: \"2rem\",\r\n        lineHeight: 1.5,\r\n      },\r\n      h4: {\r\n        fontSize: \"1.5rem\",\r\n        lineHeight: 1.5,\r\n      },\r\n      h5: {\r\n        fontSize: \"1.25rem\",\r\n        lineHeight: 2,\r\n      },\r\n      h6: {\r\n        fontSize: \"1rem\",\r\n        lineHeight: 1.5,\r\n      },\r\n    },\r\n  },\r\n});\r\n\r\nexport default mainTheme;\r\n","export const ACCESS_TOKEN = \"ACCESS_TOKEN\";\r\nexport const REFRESH_TOKEN = \"REFRESH_TOKEN\";\r\n","import { LocationState, History } from \"history\";\r\nimport { RouteNames } from \"../routes/routes\";\r\n\r\nexport const goToLogin = (history: History<LocationState>) => {\r\n  history.push(RouteNames.Login);\r\n};\r\n\r\nexport const goToHomePage = (history: History<LocationState>) => {\r\n  history.replace(RouteNames.Home);\r\n};\r\n","import React from \"react\";\r\nimport { Button, makeStyles } from \"@material-ui/core\";\r\nimport fonts from \"../constants/fonts\";\r\nimport colors from \"../constants/colors\";\r\n\r\ntype buttonType = \"primary\" | \"secondary\";\r\n\r\ninterface Props {\r\n  text: string;\r\n  type?: string;\r\n  onClick: () => void;\r\n}\r\n\r\nconst MainButton = ({ text, type = \"primary\", onClick }: Props) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <Button className={classes.button} onClick={onClick}>\r\n      {text}\r\n    </Button>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles({\r\n  button: {\r\n    backgroundColor: \"#f6d522\",\r\n    borderRadius: \"50px\",\r\n    padding: \"10px 50px\",\r\n    fontFamily: fonts.medium,\r\n    fontSize: \"16px\",\r\n    color: colors.darkBlueGrey,\r\n    textTransform: \"capitalize\",\r\n    \"&:hover\": {\r\n      backgroundColor: colors.darkBlueGrey,\r\n      color: colors.white,\r\n    },\r\n  },\r\n});\r\n\r\nexport default MainButton;\r\n","const images = {\r\n  logo: require(\"../assets/images/logo.png\").default,\r\n  yellowBackground: require(\"../assets/images/background_main.png\").default,\r\n};\r\n\r\nexport default images;\r\n","export default __webpack_public_path__ + \"static/media/playful_cat.d57e9cce.svg\";","import React from \"react\";\r\nimport { Box, makeStyles } from \"@material-ui/core\";\r\nimport MainButton from \"../components/MainButton\";\r\nimport { Typography } from \"@material-ui/core\";\r\nimport fonts from \"../constants/fonts\";\r\nimport images from \"../constants/images\";\r\nimport colors from \"../constants/colors\";\r\nimport cat from \"../assets/svgs/playful_cat.svg\";\r\nimport { RouteNames } from \"../routes/routes\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\ninterface Props {\r\n  goToLogin: () => void;\r\n}\r\n\r\nconst StartScreen = ({ goToLogin }: Props) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <Box className={classes.root} px={30}>\r\n      <Box className={classes.content} paddingBottom={3} py={2}>\r\n        <Typography\r\n          noWrap\r\n          variant=\"h1\"\r\n          component=\"h1\"\r\n          className={classes.title}\r\n        >\r\n          Welcome\r\n        </Typography>\r\n        <Typography className={classes.intro}>\r\n          Sudoku network is a place where you can create, check and solve\r\n          various Sudoku puzzles. Once you manage to create a new unique puzzle,\r\n          feel free to share, so others can solve it too.\r\n          <br /> Have fun!\r\n        </Typography>\r\n\r\n        <MainButton text=\"Log in\" type=\"primary\" onClick={goToLogin} />\r\n        <Link to={RouteNames.Register} className={classes.continue}>\r\n          Don't have an account? Sign up here\r\n        </Link>\r\n\r\n        <img src={cat} className={classes.image} alt=\"\" />\r\n\r\n        <Link to={RouteNames.Home} className={classes.continue}>\r\n          Continue as guest\r\n        </Link>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    position: \"fixed\",\r\n    top: 0,\r\n    backgroundImage: `url(${images.yellowBackground})`,\r\n    backgroundRepeat: \"no-repeat\",\r\n    backgroundPosition: \"center\",\r\n    backgroundSize: \"cover\",\r\n    height: \"100%\",\r\n    width: \"100%\",\r\n    overflow: \"auto\",\r\n    verticalAlign: \"center\",\r\n  },\r\n  title: {\r\n    fontFamily: fonts.regular,\r\n    color: colors.darkBlueGrey,\r\n    fontSize: 56,\r\n    paddingBottom: \"45px\",\r\n  },\r\n  content: {\r\n    backgroundColor: \"white\",\r\n    textAlign: \"center\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n    borderRadius: \"0 0 5px 5px\",\r\n    boxShadow: \"5px 5px 20px 5px rgba(0,0,0,0.5)\",\r\n  },\r\n  image: {\r\n    paddingTop: \"50px\",\r\n    paddingBottom: \"30px\",\r\n  },\r\n  continue: {\r\n    color: colors.darkBlueGrey,\r\n    fontFamily: fonts.light,\r\n    paddingTop: \"10px\",\r\n    textDecoration: \"none\",\r\n    \"&:hover\": {\r\n      color: colors.black,\r\n    },\r\n  },\r\n  intro: {\r\n    paddingBottom: \"30px\",\r\n    width: \"60%\",\r\n  },\r\n});\r\n\r\nexport default StartScreen;\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { goToHomePage, goToLogin } from \"../helpers/navigation\";\r\nimport { RootState } from \"../redux/store\";\r\nimport StartScreen from \"../screens/StartScreen\";\r\n\r\nconst StartContainer = () => {\r\n  const history = useHistory();\r\n  const user = useSelector((state: RootState) => state.auth.user);\r\n\r\n  React.useEffect(() => {\r\n    if (user) goToHomePage(history);\r\n  }, [history, user]);\r\n\r\n  const navigateToLogin = React.useCallback(\r\n    () => goToLogin(history),\r\n    [history]\r\n  );\r\n  return <StartScreen goToLogin={navigateToLogin} />;\r\n};\r\n\r\nexport default StartContainer;\r\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\r\nimport { User } from \"../../types/User\";\r\n\r\ninterface AuthState {\r\n  user: User | undefined;\r\n}\r\n\r\nconst initialState: AuthState = {\r\n  user: undefined,\r\n};\r\n\r\nconst authSlice = createSlice({\r\n  name: \"auth\",\r\n  initialState,\r\n  reducers: {\r\n    setUser: (state, action: PayloadAction<User | undefined>) => {\r\n      state.user = action.payload;\r\n    },\r\n    removeUser: (state) => {\r\n      state.user = undefined;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { setUser, removeUser } = authSlice.actions;\r\nexport const authReducer = authSlice.reducer;\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\nimport colors from \"../../constants/colors\";\r\n\r\nexport interface NotificationInterface {\r\n  message: string;\r\n  color: string;\r\n  backgroundColor: string;\r\n}\r\n\r\ninterface NotificationState {\r\n  notification: NotificationInterface;\r\n  shown: boolean;\r\n}\r\n\r\nconst initialState: NotificationState = {\r\n  notification: {\r\n    message: \"\",\r\n    color: colors.white,\r\n    backgroundColor: colors.black,\r\n  },\r\n  shown: false,\r\n};\r\n\r\nconst notificationSlice = createSlice({\r\n  name: \"notification\",\r\n  initialState,\r\n  reducers: {\r\n    showNotification: (state, action) => {\r\n      state.notification = action.payload;\r\n      state.shown = true;\r\n    },\r\n    hideNotification: (state) => {\r\n      state.shown = false;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { showNotification, hideNotification } = notificationSlice.actions;\r\nexport const notificationReducer = notificationSlice.reducer;\r\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\r\n\r\ninterface LoadingState {\r\n  [key: string]: string;\r\n}\r\nconst initialState: LoadingState = {};\r\n\r\nconst loadingSlice = createSlice({\r\n  name: \"loading\",\r\n  initialState,\r\n  reducers: {\r\n    startLoading: (state, action: PayloadAction<string>) => {\r\n      state[action.payload] = action.payload;\r\n    },\r\n    stopLoading: (state, action: PayloadAction<string>) => {\r\n      delete state[action.payload];\r\n    },\r\n  },\r\n});\r\n\r\nexport const { startLoading, stopLoading } = loadingSlice.actions;\r\nexport const loadingReducer = loadingSlice.reducer;\r\n","import { authReducer } from \"./auth/authRedux\";\r\nimport { configureStore } from \"@reduxjs/toolkit\";\r\nimport { notificationReducer } from \"./notification/notificationRedux\";\r\nimport { loadingReducer } from \"./loading/loadingRedux\";\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    auth: authReducer,\r\n    notification: notificationReducer,\r\n    loading: loadingReducer,\r\n  },\r\n});\r\n\r\nexport type RootState = ReturnType<typeof store.getState>;\r\nexport type AppDispatch = typeof store.dispatch;\r\n\r\nexport default store;\r\n","export interface User {\r\n  email: string;\r\n  firstName: string;\r\n  lastName: string;\r\n  username: string;\r\n  phone?: string;\r\n}\r\nexport function userFromJSON(maybe: any): User {\r\n  if (!maybe) throw Error(\"object must exist\");\r\n  if (typeof maybe.email !== \"string\") throw Error(\"email must be string\");\r\n  if (typeof maybe.first_name !== \"string\")\r\n    throw Error(\"firstname must be string\");\r\n  if (typeof maybe.last_name !== \"string\")\r\n    throw Error(\"lastname must be string\");\r\n  if (typeof maybe.username !== \"string\")\r\n    throw Error(\"username must be string\");\r\n\r\n  return {\r\n    email: maybe.email,\r\n    firstName: maybe.first_name,\r\n    lastName: maybe.last_name,\r\n    username: maybe.username,\r\n    phone: maybe.phone,\r\n  };\r\n}\r\n\r\nexport function userToJSON(user: User) {\r\n  return {\r\n    email: user.email,\r\n    first_name: user.firstName,\r\n    last_name: user.lastName,\r\n    username: user.username,\r\n    phone: user.phone,\r\n  };\r\n}\r\n","import { ACCESS_TOKEN, REFRESH_TOKEN } from \"../../constants/auth\";\r\nimport { TokenData } from \"../../helpers/auth\";\r\nimport jwtDecode from \"jwt-decode\";\r\nimport { Service, ServiceNames, RequestTypes } from \"../service\";\r\nimport { AppDispatch } from \"../../redux/store\";\r\nimport { removeUser, setUser } from \"../../redux/auth/authRedux\";\r\nimport { User, userFromJSON, userToJSON } from \"../../types/User\";\r\n\r\nclass Client implements Service {\r\n  constructor(\r\n    private clientInstances: {\r\n      [key in ServiceNames]: { [key in RequestTypes]: any };\r\n    },\r\n    private dispatch: AppDispatch\r\n  ) {}\r\n\r\n  public async login(email: string, password: string): Promise<string> {\r\n    const res = await this.clientInstances.auth.post(\"login\", {\r\n      email: email,\r\n      password: password,\r\n    });\r\n    if (res) {\r\n      localStorage.setItem(ACCESS_TOKEN, res.token);\r\n      localStorage.setItem(REFRESH_TOKEN, res.refreshToken);\r\n      return res.token;\r\n    }\r\n    return \"\";\r\n  }\r\n\r\n  public async register(user: User, password: string): Promise<void> {\r\n    await this.clientInstances.auth.post(\"register\", {\r\n      ...userToJSON(user),\r\n      password: password,\r\n    });\r\n  }\r\n\r\n  public async logout(): Promise<void> {\r\n    await this.clientInstances.auth.post(\"logout\", {});\r\n    localStorage.removeItem(ACCESS_TOKEN);\r\n    localStorage.removeItem(REFRESH_TOKEN);\r\n    this.dispatch(removeUser());\r\n  }\r\n\r\n  public async checkToken(): Promise<void> {\r\n    try {\r\n      await this.clientInstances.auth.post(\"checkToken\");\r\n      const token = localStorage.getItem(ACCESS_TOKEN);\r\n      if (token) {\r\n        const userInfo: TokenData = jwtDecode(token);\r\n        const user = await this.readUserById(userInfo.userID);\r\n        this.dispatch(setUser(user));\r\n      }\r\n    } catch (e) {\r\n      this.dispatch(removeUser());\r\n    }\r\n  }\r\n\r\n  public async readUserById(userId: number): Promise<User> {\r\n    const res = await this.clientInstances.users.post(\"readUserById\", {\r\n      userId: userId,\r\n    });\r\n\r\n    return userFromJSON(res);\r\n  }\r\n\r\n  public async refreshToken(refreshToken: string): Promise<string> {\r\n    const res = await this.clientInstances.auth.post(\"refreshToken\", {\r\n      refreshToken: refreshToken,\r\n    });\r\n    return res.token;\r\n  }\r\n}\r\n\r\nexport default Client;\r\n","import { showNotification } from \"../../redux/notification/notificationRedux\";\r\nimport { User } from \"../../types/User\";\r\nimport { Service } from \"../service\";\r\nimport { AppDispatch } from \"../../redux/store\";\r\n\r\nclass ErrorMiddleware implements Service {\r\n  constructor(private next: Service, private dispatch: AppDispatch) {}\r\n\r\n  public async login(email: string, password: string): Promise<string> {\r\n    try {\r\n      return this.next.login(email, password);\r\n    } catch (e) {\r\n      this.dispatch(\r\n        showNotification({\r\n          message: \"abc\",\r\n          color: \"red\",\r\n          backgroundColor: \"blue\",\r\n        })\r\n      );\r\n      throw e;\r\n    }\r\n  }\r\n\r\n  public async register(user: User, password: string): Promise<void> {\r\n    try {\r\n      await this.next.register(user, password);\r\n    } catch (e) {\r\n      this.dispatch(\r\n        showNotification({\r\n          message:\r\n            \"Register failed. Check if all data is correct or try a different email or username as it might already be in use.\",\r\n          color: \"white\",\r\n          backgroundColor: \"red\",\r\n        })\r\n      );\r\n      throw e;\r\n    }\r\n  }\r\n\r\n  public async logout(): Promise<void> {\r\n    try {\r\n      return this.next.logout();\r\n    } catch (e) {\r\n      throw e;\r\n    }\r\n  }\r\n\r\n  public async checkToken(): Promise<void> {\r\n    try {\r\n      return this.next.checkToken();\r\n    } catch (e) {\r\n      throw e;\r\n    }\r\n  }\r\n\r\n  public async readUserById(userId: number): Promise<User> {\r\n    try {\r\n      return this.next.readUserById(userId);\r\n    } catch (e) {\r\n      throw e;\r\n    }\r\n  }\r\n\r\n  public async refreshToken(token: string): Promise<string> {\r\n    try {\r\n      return this.next.refreshToken(token);\r\n    } catch (e) {\r\n      throw e;\r\n    }\r\n  }\r\n}\r\n\r\nexport default ErrorMiddleware;\r\n","const loadingKeys = {\r\n  LOGIN: \"LOGIN\",\r\n  REGISTER: \"REGISTER\",\r\n};\r\n\r\nexport default loadingKeys;\r\n","import loadingKeys from \"../../constants/loading\";\r\nimport { startLoading, stopLoading } from \"../../redux/loading/loadingRedux\";\r\nimport { AppDispatch } from \"../../redux/store\";\r\nimport { User } from \"../../types/User\";\r\nimport { Service } from \"../service\";\r\n\r\nclass LoadingMiddleware implements Service {\r\n  constructor(private next: Service, private dispatch: AppDispatch) {}\r\n\r\n  public async login(email: string, password: string): Promise<string> {\r\n    try {\r\n      this.dispatch(startLoading(loadingKeys.LOGIN));\r\n      const res = this.next.login(email, password);\r\n      this.dispatch(stopLoading(loadingKeys.LOGIN));\r\n      return res;\r\n    } catch (e) {\r\n      this.dispatch(stopLoading(loadingKeys.LOGIN));\r\n      throw e;\r\n    }\r\n  }\r\n\r\n  public async register(user: User, password: string): Promise<void> {\r\n    try {\r\n      this.dispatch(startLoading(loadingKeys.REGISTER));\r\n      await this.next.register(user, password);\r\n      this.dispatch(stopLoading(loadingKeys.REGISTER));\r\n    } catch (e) {\r\n      this.dispatch(stopLoading(loadingKeys.REGISTER));\r\n      throw e;\r\n    }\r\n  }\r\n\r\n  public async logout(): Promise<void> {\r\n    try {\r\n      return this.next.logout();\r\n    } catch (e) {\r\n      throw e;\r\n    }\r\n  }\r\n\r\n  public async checkToken(): Promise<void> {\r\n    try {\r\n      return this.next.checkToken();\r\n    } catch (e) {\r\n      throw e;\r\n    }\r\n  }\r\n\r\n  public async readUserById(userId: number): Promise<User> {\r\n    try {\r\n      return this.next.readUserById(userId);\r\n    } catch (e) {\r\n      throw e;\r\n    }\r\n  }\r\n\r\n  public async refreshToken(token: string): Promise<string> {\r\n    try {\r\n      return this.next.refreshToken(token);\r\n    } catch (e) {\r\n      throw e;\r\n    }\r\n  }\r\n}\r\n\r\nexport default LoadingMiddleware;\r\n","import { AxiosResponse } from \"axios\";\r\nimport store from \"../redux/store\";\r\nimport { User } from \"../types/User\";\r\nimport AxiosInstance from \"./axios\";\r\nimport Client from \"./middlewares/clientMiddleware\";\r\nimport ErrorMiddleware from \"./middlewares/errorMiddleware\";\r\nimport LoadingMiddleware from \"./middlewares/loadingMiddleware\";\r\n\r\ninterface AuthService {\r\n  login(email: string, password: string): Promise<string>;\r\n  register(user: User, password: string): Promise<void>;\r\n  logout(): Promise<void>;\r\n  checkToken(): Promise<void>;\r\n  readUserById(userId: number): Promise<User>;\r\n  refreshToken(refreshToken: string): Promise<string>;\r\n}\r\n\r\nexport const services = [\"auth\", \"users\"];\r\nexport type ServiceNames = \"auth\" | \"users\";\r\nlet service: Service;\r\n\r\nconst responseBody = (response: AxiosResponse) => response.data;\r\n\r\nexport const requests = (service: string) => {\r\n  return {\r\n    get: (url: string) =>\r\n      AxiosInstance.get(`${service}/${url}`).then(responseBody),\r\n    post: (url: string, body: Object) =>\r\n      AxiosInstance.post(`${service}/${url}`, body).then(responseBody),\r\n    put: (url: string, body: {}) =>\r\n      AxiosInstance.put(`${service}/${url}`, body).then(responseBody),\r\n    delete: (url: string) =>\r\n      AxiosInstance.delete(`${service}/${url}`).then(responseBody),\r\n  };\r\n};\r\nexport type RequestTypes = \"get\" | \"post\" | \"put\" | \"delete\";\r\nconst instances: any = {};\r\n\r\nservices.forEach((service) => (instances[service] = requests(service)));\r\n\r\nexport interface Service extends AuthService {}\r\n\r\nconst client = new Client(instances, store.dispatch);\r\nconst errorMiddleware = new ErrorMiddleware(client, store.dispatch);\r\nservice = new LoadingMiddleware(errorMiddleware, store.dispatch);\r\nexport default service;\r\n","import axios, { AxiosResponse } from \"axios\";\r\nimport { REFRESH_TOKEN } from \"../constants/auth\";\r\nimport { onTokenNotFound, onTokenSuccess } from \"../helpers/auth\";\r\nimport store from \"../redux/store\";\r\nimport service from \"./service\";\r\n\r\nconst AxiosInstance = axios.create({\r\n  timeout: 15000,\r\n});\r\n\r\nAxiosInstance.interceptors.response.use(\r\n  async (response: AxiosResponse<any>) => {\r\n    if (response.data?.error === \"-1\") {\r\n      const refreshToken = localStorage.getItem(REFRESH_TOKEN);\r\n      if (refreshToken) {\r\n        const accessToken = await service\r\n          .refreshToken(refreshToken)\r\n          .catch((error) => {\r\n            onTokenNotFound(store.dispatch);\r\n          });\r\n        if (accessToken) {\r\n          onTokenSuccess(accessToken);\r\n          return response;\r\n        }\r\n        onTokenNotFound(store.dispatch);\r\n        return response;\r\n      }\r\n      onTokenNotFound(store.dispatch);\r\n      return response;\r\n    }\r\n\r\n    return response;\r\n  }\r\n);\r\n\r\nexport const setHeaders = (token: string) => {\r\n  AxiosInstance.interceptors.request.use((config) => {\r\n    if (token !== \"\") config.headers.authorization = \"Bearer \" + token;\r\n    else delete config.headers.authorization;\r\n    return config;\r\n  });\r\n};\r\n\r\nexport default AxiosInstance;\r\n","import { ACCESS_TOKEN, REFRESH_TOKEN } from \"../constants/auth\";\r\nimport { Dispatch } from \"redux\";\r\nimport { removeUser } from \"../redux/auth/authRedux\";\r\nimport { setHeaders } from \"../service/axios\";\r\n\r\nexport interface TokenData {\r\n  sub: string;\r\n  userID: number;\r\n}\r\n\r\nexport const onTokenSuccess = (token: string) => {\r\n  localStorage.setItem(ACCESS_TOKEN, token);\r\n  setHeaders(token);\r\n};\r\n\r\nexport const onTokenNotFound = (dispatch: Dispatch<any>) => {\r\n  localStorage.removeItem(ACCESS_TOKEN);\r\n  localStorage.removeItem(REFRESH_TOKEN);\r\n  dispatch(removeUser());\r\n};\r\n","export default __webpack_public_path__ + \"static/media/login_illustration.3c840901.svg\";","import React from \"react\";\r\nimport { TextField } from \"@material-ui/core\";\r\nimport colors from \"../constants/colors\";\r\n\r\ninterface Props {\r\n  placeholder?: string;\r\n  name: string;\r\n  type?: string;\r\n  label?: string;\r\n  onChange: () => void;\r\n  value: string;\r\n  error?: boolean;\r\n  className?: string;\r\n  endAdornment?: React.ReactElement;\r\n}\r\n\r\nconst LocalTextField = ({\r\n  placeholder,\r\n  name,\r\n  type,\r\n  label,\r\n  value,\r\n  error,\r\n  className,\r\n  onChange,\r\n  endAdornment,\r\n}: Props) => {\r\n  return (\r\n    <TextField\r\n      placeholder={placeholder}\r\n      name={name}\r\n      type={type}\r\n      label={label}\r\n      value={value}\r\n      error={error}\r\n      onChange={onChange}\r\n      className={className}\r\n      variant=\"outlined\"\r\n      InputProps={{\r\n        endAdornment: endAdornment,\r\n        style: {\r\n          color: colors.darkBlueGrey,\r\n        },\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default LocalTextField;\r\n","import t from \"./translations.json\";\r\n\r\nconst keys = Object.keys(t.en.translation);\r\n\r\nexport const translations: typeof t.en.translation = keys.reduce(\r\n  (acc, curr) => ({ ...acc, [curr]: curr }),\r\n  {} as typeof t.en.translation\r\n);\r\n","import { rules, RulesInterface } from \"../constants/rules\";\r\n\r\nexport const PASSWORD_MIN_LENGTH = 5;\r\nexport const USERNAME_MIN_LENGTH = 6;\r\nexport const NAME_MIN_LENGTH = 2;\r\nexport const MAX_LENGTH = 100;\r\n\r\nexport interface Login {\r\n  rules: (t: (value: string) => string) => {\r\n    email: Partial<RulesInterface> | undefined;\r\n    password: Partial<RulesInterface> | undefined;\r\n  };\r\n}\r\n\r\nexport interface Register {\r\n  rules: (t: (value: string) => string) => {\r\n    email: Partial<RulesInterface> | undefined;\r\n    password: Partial<RulesInterface> | undefined;\r\n    firstName: Partial<RulesInterface> | undefined;\r\n    lastName: Partial<RulesInterface> | undefined;\r\n    username: Partial<RulesInterface> | undefined;\r\n  };\r\n}\r\n\r\nexport const loginRules: Login = {\r\n  rules: (t: (value: string) => string) => ({\r\n    email: {\r\n      required: (rules(t).required = {\r\n        value: true,\r\n        message: \"Mail is required\",\r\n      }),\r\n      pattern: (rules(t).emailPattern = {\r\n        value: rules(t).emailPattern.value,\r\n        message: \"Wrong email pattern\",\r\n      }),\r\n    },\r\n    password: {\r\n      required: (rules(t).required = {\r\n        value: true,\r\n        message: \"Password is required\",\r\n      }),\r\n      minLength: rules(t).minLength(\r\n        PASSWORD_MIN_LENGTH,\r\n        `Minimal password length is ${PASSWORD_MIN_LENGTH}`\r\n      ),\r\n      maxLength: rules(t).maxLength(\r\n        MAX_LENGTH,\r\n        `Maximum length for a password is ${MAX_LENGTH}`\r\n      ),\r\n    },\r\n  }),\r\n};\r\n\r\nexport const registerRules: Register = {\r\n  rules: (t: (value: string) => string) => ({\r\n    email: {\r\n      required: (rules(t).required = {\r\n        value: true,\r\n        message: \"Mail is required\",\r\n      }),\r\n      pattern: (rules(t).emailPattern = {\r\n        value: rules(t).emailPattern.value,\r\n        message: \"Wrong email pattern\",\r\n      }),\r\n    },\r\n    password: {\r\n      required: (rules(t).required = {\r\n        value: true,\r\n        message: \"Password is required\",\r\n      }),\r\n      minLength: rules(t).minLength(\r\n        PASSWORD_MIN_LENGTH,\r\n        `Minimal password length is ${PASSWORD_MIN_LENGTH}`\r\n      ),\r\n      maxLength: rules(t).maxLength(\r\n        MAX_LENGTH,\r\n        `Maximum length for a password is ${MAX_LENGTH}`\r\n      ),\r\n    },\r\n    firstName: {\r\n      required: (rules(t).required = {\r\n        value: true,\r\n        message: \"First name is required\",\r\n      }),\r\n      minLength: rules(t).minLength(\r\n        NAME_MIN_LENGTH,\r\n        `Minimal name length is ${NAME_MIN_LENGTH}`\r\n      ),\r\n      maxLength: rules(t).maxLength(\r\n        MAX_LENGTH,\r\n        `Maximum length for the first name is ${MAX_LENGTH}`\r\n      ),\r\n    },\r\n    lastName: {\r\n      required: (rules(t).required = {\r\n        value: true,\r\n        message: \"Last name is required\",\r\n      }),\r\n      minLength: rules(t).minLength(\r\n        NAME_MIN_LENGTH,\r\n        `Minimal name length is ${NAME_MIN_LENGTH}`\r\n      ),\r\n      maxLength: rules(t).maxLength(\r\n        MAX_LENGTH,\r\n        `Maximum length for the last name is ${MAX_LENGTH}`\r\n      ),\r\n    },\r\n    username: {\r\n      required: (rules(t).required = {\r\n        value: true,\r\n        message: \"Username is required\",\r\n      }),\r\n      minLength: rules(t).minLength(\r\n        USERNAME_MIN_LENGTH,\r\n        `Minimal username length is ${USERNAME_MIN_LENGTH}`\r\n      ),\r\n      maxLength: rules(t).maxLength(\r\n        MAX_LENGTH,\r\n        `Maximum length for the username is ${MAX_LENGTH}`\r\n      ),\r\n    },\r\n  }),\r\n};\r\n","import { ValidationRule, ValidationValueMessage } from \"react-hook-form\";\r\n\r\nexport function rules(t: (value: string) => string) {\r\n  return {\r\n    required: {\r\n      value: true,\r\n      message: \"Field required\",\r\n    },\r\n    emailPattern: {\r\n      value:\r\n        /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\r\n      message: \"Invalid email\",\r\n    },\r\n    minLength: (value: number, message?: string) => ({\r\n      value,\r\n      message: message ? \"Min length translation\" : `Min length is ${value}`,\r\n    }),\r\n    maxLength: (value: number, message?: string) => ({\r\n      value,\r\n      message: message ? \"Max length translation\" : `Max length is ${value}`,\r\n    }),\r\n  };\r\n}\r\n\r\nexport interface RulesInterface {\r\n  required: string | boolean | ValidationValueMessage<boolean>;\r\n  min: ValidationRule<React.ReactText>;\r\n  max: ValidationRule<React.ReactText>;\r\n  maxLength: ValidationRule<React.ReactText>;\r\n  minLength: ValidationRule<React.ReactText>;\r\n  pattern: ValidationRule<RegExp>;\r\n  validate: any;\r\n}\r\n","import React from \"react\";\r\nimport {\r\n  Box,\r\n  makeStyles,\r\n  Typography,\r\n  IconButton,\r\n  Grid,\r\n  FormHelperText,\r\n} from \"@material-ui/core\";\r\nimport MainButton from \"../components/MainButton\";\r\nimport images from \"../constants/images\";\r\nimport colors from \"../constants/colors\";\r\nimport loginImage from \"../assets/svgs/login_illustration.svg\";\r\nimport { Controller, useFormContext } from \"react-hook-form\";\r\nimport { loginFields } from \"../containers/LoginContainer\";\r\nimport LocalTextField from \"../components/LocalTextField\";\r\nimport EmailRoundedIcon from \"@material-ui/icons/EmailRounded\";\r\nimport VisibilityRoundedIcon from \"@material-ui/icons/VisibilityRounded\";\r\nimport VisibilityOffRoundedIcon from \"@material-ui/icons/VisibilityOffRounded\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { translations } from \"../i18n/translations\";\r\nimport { loginRules } from \"../helpers/rules\";\r\nimport ErrorIcon from \"@material-ui/icons/Error\";\r\n\r\ninterface Props {\r\n  handleSubmit: () => void;\r\n}\r\n\r\nconst LoginScreen = ({ handleSubmit }: Props) => {\r\n  const classes = useStyles();\r\n  const { t } = useTranslation();\r\n  const [showPassword, setShowPassword] = React.useState<boolean>(false);\r\n  const {\r\n    formState: { errors },\r\n  } = useFormContext();\r\n\r\n  const toggleShowPassword = React.useCallback(() => {\r\n    setShowPassword((prev) => !prev);\r\n  }, []);\r\n\r\n  return (\r\n    <Box className={classes.root} px={30}>\r\n      <Box className={classes.content} py={2}>\r\n        <Typography\r\n          noWrap\r\n          variant=\"h3\"\r\n          component=\"h1\"\r\n          className={classes.title}\r\n        >\r\n          {t(translations.login_title)}\r\n        </Typography>\r\n        <Grid container>\r\n          <Grid item md={6} style={{ textAlign: \"center\" }}>\r\n            <div className={classes.emailWrapper}>\r\n              <Controller\r\n                defaultValue=\"\"\r\n                name={loginFields.email}\r\n                rules={loginRules.rules(t).email}\r\n                render={({ field: { value, onChange } }) => (\r\n                  <LocalTextField\r\n                    name={loginFields.email}\r\n                    onChange={onChange}\r\n                    value={value}\r\n                    className={classes.textfield}\r\n                    label=\"E-mail\"\r\n                    endAdornment={<EmailRoundedIcon />}\r\n                  />\r\n                )}\r\n              />\r\n              {errors.email && (\r\n                <FormHelperText className={classes.error} error>\r\n                  <ErrorIcon type=\"secondary\" />\r\n                  <span>{errors.email?.message}</span>\r\n                </FormHelperText>\r\n              )}\r\n            </div>\r\n            <div className={classes.passwordWrapper}>\r\n              <Controller\r\n                defaultValue=\"\"\r\n                name={loginFields.password}\r\n                render={({ field: { value, onChange } }) => (\r\n                  <LocalTextField\r\n                    name={loginFields.password}\r\n                    onChange={onChange}\r\n                    value={value}\r\n                    className={classes.textfield}\r\n                    type={showPassword ? \"text\" : \"password\"}\r\n                    label=\"Password\"\r\n                    endAdornment={\r\n                      <IconButton\r\n                        onClick={toggleShowPassword}\r\n                        style={{ color: \"inherit\", padding: 0 }}\r\n                      >\r\n                        {showPassword ? (\r\n                          <VisibilityRoundedIcon />\r\n                        ) : (\r\n                          <VisibilityOffRoundedIcon />\r\n                        )}\r\n                      </IconButton>\r\n                    }\r\n                  />\r\n                )}\r\n              />\r\n            </div>\r\n            <MainButton text=\"Log in\" type=\"primary\" onClick={handleSubmit} />\r\n          </Grid>\r\n          <Grid item md={6}>\r\n            <img src={loginImage} className={classes.image} alt=\"\" />\r\n          </Grid>\r\n        </Grid>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    position: \"fixed\",\r\n    top: 0,\r\n    backgroundImage: `url(${images.yellowBackground})`,\r\n    backgroundRepeat: \"no-repeat\",\r\n    backgroundPosition: \"center\",\r\n    backgroundSize: \"cover\",\r\n    height: \"100%\",\r\n    width: \"100%\",\r\n    overflow: \"auto\",\r\n    verticalAlign: \"center\",\r\n  },\r\n  title: {\r\n    color: colors.darkBlueGrey,\r\n    paddingBottom: \"60px\",\r\n    paddingTop: \"20px\",\r\n  },\r\n  content: {\r\n    backgroundColor: \"white\",\r\n    textAlign: \"center\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n    borderRadius: \"0 0 5px 5px\",\r\n    boxShadow: \"5px 5px 20px 5px rgba(0,0,0,0.5)\",\r\n  },\r\n  emailWrapper: {\r\n    paddingTop: \"60px\",\r\n    paddingBottom: \"45px\",\r\n  },\r\n  passwordWrapper: {\r\n    paddingBottom: \"55px\",\r\n  },\r\n  textfield: {\r\n    width: \"60%\",\r\n  },\r\n  image: {\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n  },\r\n  error: {\r\n    width: \"60%\",\r\n    textAlign: \"center\",\r\n  },\r\n});\r\nexport default LoginScreen;\r\n","import jwtDecode from \"jwt-decode\";\r\nimport React from \"react\";\r\nimport { FormProvider, useForm } from \"react-hook-form\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { onTokenNotFound, TokenData } from \"../helpers/auth\";\r\nimport { goToHomePage } from \"../helpers/navigation\";\r\nimport { setUser } from \"../redux/auth/authRedux\";\r\nimport { RootState } from \"../redux/store\";\r\nimport LoginScreen from \"../screens/LoginScreen\";\r\nimport service from \"../service/service\";\r\n\r\nexport type LoginData = {\r\n  email: string;\r\n  password: string;\r\n};\r\n\r\nexport const loginFields = {\r\n  email: \"email\",\r\n  password: \"password\",\r\n};\r\n\r\nconst LoginContainer = () => {\r\n  const user = useSelector((state: RootState) => state.auth.user);\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n  const formMethods = useForm<LoginData>();\r\n\r\n  React.useEffect(() => {\r\n    if (user) goToHomePage(history);\r\n  }, [user, history]);\r\n\r\n  const onSubmit = React.useCallback(\r\n    async (data: LoginData) => {\r\n      try {\r\n        const token = await service.login(data.email, data.password);\r\n        const decoded: TokenData = jwtDecode(token);\r\n        const userInfo = await service.readUserById(decoded.userID);\r\n        dispatch(setUser(userInfo));\r\n        goToHomePage(history);\r\n      } catch (e) {\r\n        onTokenNotFound(dispatch);\r\n      }\r\n    },\r\n    [dispatch, history]\r\n  );\r\n\r\n  return (\r\n    <FormProvider {...formMethods}>\r\n      <LoginScreen handleSubmit={formMethods.handleSubmit(onSubmit)} />\r\n    </FormProvider>\r\n  );\r\n};\r\n\r\nexport default LoginContainer;\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { RootState } from \"../redux/store\";\r\n\r\nconst HomeContainer = () => {\r\n  const user = useSelector((state: RootState) => state.auth.user);\r\n\r\n  return <div>i</div>;\r\n};\r\n\r\nexport default HomeContainer;\r\n","export default __webpack_public_path__ + \"static/media/register_hello_illustration.f5218429.svg\";","import React from \"react\";\r\nimport {\r\n  Box,\r\n  makeStyles,\r\n  Typography,\r\n  IconButton,\r\n  Grid,\r\n  FormHelperText,\r\n} from \"@material-ui/core\";\r\nimport MainButton from \"../components/MainButton\";\r\nimport images from \"../constants/images\";\r\nimport colors from \"../constants/colors\";\r\nimport registerImage from \"../assets/svgs/register_hello_illustration.svg\";\r\nimport { Controller, useFormContext } from \"react-hook-form\";\r\nimport LocalTextField from \"../components/LocalTextField\";\r\nimport EmailRoundedIcon from \"@material-ui/icons/EmailRounded\";\r\nimport VisibilityRoundedIcon from \"@material-ui/icons/VisibilityRounded\";\r\nimport VisibilityOffRoundedIcon from \"@material-ui/icons/VisibilityOffRounded\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { translations } from \"../i18n/translations\";\r\nimport { registerRules } from \"../helpers/rules\";\r\nimport ErrorIcon from \"@material-ui/icons/Error\";\r\nimport AccountCircleIcon from \"@material-ui/icons/AccountCircle\";\r\nimport { registerFields } from \"../containers/RegisterContainer\";\r\nimport PhoneIcon from \"@material-ui/icons/Phone\";\r\n\r\ninterface Props {\r\n  handleSubmit: () => void;\r\n}\r\n\r\nconst RegisterScreen = ({ handleSubmit }: Props) => {\r\n  const classes = useStyles();\r\n  const { t } = useTranslation();\r\n  const [showPassword, setShowPassword] = React.useState<boolean>(false);\r\n  const {\r\n    formState: { errors },\r\n  } = useFormContext();\r\n\r\n  const toggleShowPassword = React.useCallback(() => {\r\n    setShowPassword((prev) => !prev);\r\n  }, []);\r\n\r\n  return (\r\n    <Box className={classes.root} px={30}>\r\n      <Box className={classes.content} py={2}>\r\n        <Typography\r\n          noWrap\r\n          variant=\"h3\"\r\n          component=\"h1\"\r\n          className={classes.title}\r\n        >\r\n          {t(translations.register_title)}\r\n        </Typography>\r\n        <Grid container>\r\n          <Grid item md={6}>\r\n            <div className={classes.firstNameWrapper}>\r\n              <Controller\r\n                defaultValue=\"\"\r\n                name={registerFields.firstName}\r\n                rules={registerRules.rules(t).firstName}\r\n                render={({ field: { value, onChange } }) => (\r\n                  <LocalTextField\r\n                    name={registerFields.firstName}\r\n                    onChange={onChange}\r\n                    value={value}\r\n                    className={classes.firstName}\r\n                    label=\"First name\"\r\n                  />\r\n                )}\r\n              />\r\n\r\n              <Controller\r\n                defaultValue=\"\"\r\n                name={registerFields.lastName}\r\n                rules={registerRules.rules(t).lastName}\r\n                render={({ field: { value, onChange } }) => (\r\n                  <LocalTextField\r\n                    name={registerFields.lastName}\r\n                    onChange={onChange}\r\n                    value={value}\r\n                    label=\"Last name\"\r\n                  />\r\n                )}\r\n              />\r\n            </div>\r\n            {(errors.firstName || errors.lastName) && (\r\n              <div className={classes.nameErrors}>\r\n                {errors.firstName && (\r\n                  <FormHelperText className={classes.error} error>\r\n                    <ErrorIcon type=\"secondary\" />\r\n                    <span>{errors.firstName?.message}</span>\r\n                  </FormHelperText>\r\n                )}\r\n                {errors.lastName && (\r\n                  <FormHelperText className={classes.error} error>\r\n                    <ErrorIcon type=\"secondary\" />\r\n                    <span>{errors.lastName?.message}</span>\r\n                  </FormHelperText>\r\n                )}\r\n              </div>\r\n            )}\r\n\r\n            <div className={classes.wrapper}>\r\n              <Controller\r\n                defaultValue=\"\"\r\n                name={registerFields.username}\r\n                rules={registerRules.rules(t).username}\r\n                render={({ field: { value, onChange } }) => (\r\n                  <LocalTextField\r\n                    name={registerFields.username}\r\n                    onChange={onChange}\r\n                    value={value}\r\n                    className={classes.textfield}\r\n                    label=\"Username\"\r\n                    endAdornment={<AccountCircleIcon />}\r\n                  />\r\n                )}\r\n              />\r\n              {errors.username && (\r\n                <FormHelperText className={classes.error} error>\r\n                  <ErrorIcon type=\"secondary\" />\r\n                  <span>{errors.username?.message}</span>\r\n                </FormHelperText>\r\n              )}\r\n            </div>\r\n            <div className={classes.wrapper}>\r\n              <Controller\r\n                defaultValue=\"\"\r\n                name={registerFields.email}\r\n                rules={registerRules.rules(t).email}\r\n                render={({ field: { value, onChange } }) => (\r\n                  <LocalTextField\r\n                    name={registerFields.email}\r\n                    onChange={onChange}\r\n                    value={value}\r\n                    className={classes.textfield}\r\n                    label=\"E-mail\"\r\n                    endAdornment={<EmailRoundedIcon />}\r\n                  />\r\n                )}\r\n              />\r\n              {errors.email && (\r\n                <FormHelperText className={classes.error} error>\r\n                  <ErrorIcon type=\"secondary\" />\r\n                  <span>{errors.email?.message}</span>\r\n                </FormHelperText>\r\n              )}\r\n            </div>\r\n            <div className={classes.wrapper}>\r\n              <Controller\r\n                defaultValue=\"\"\r\n                name={registerFields.password}\r\n                rules={registerRules.rules(t).password}\r\n                render={({ field: { value, onChange } }) => (\r\n                  <LocalTextField\r\n                    name={registerFields.password}\r\n                    onChange={onChange}\r\n                    value={value}\r\n                    className={classes.textfield}\r\n                    type={showPassword ? \"text\" : \"password\"}\r\n                    label=\"Password\"\r\n                    endAdornment={\r\n                      <IconButton\r\n                        onClick={toggleShowPassword}\r\n                        style={{ color: \"inherit\", padding: 0 }}\r\n                      >\r\n                        {showPassword ? (\r\n                          <VisibilityRoundedIcon />\r\n                        ) : (\r\n                          <VisibilityOffRoundedIcon />\r\n                        )}\r\n                      </IconButton>\r\n                    }\r\n                  />\r\n                )}\r\n              />\r\n\r\n              {errors.password && (\r\n                <FormHelperText className={classes.error} error>\r\n                  <ErrorIcon type=\"secondary\" />\r\n                  <span>{errors.password?.message}</span>\r\n                </FormHelperText>\r\n              )}\r\n            </div>\r\n            <div className={classes.wrapper}>\r\n              <Controller\r\n                defaultValue=\"\"\r\n                name={registerFields.password}\r\n                rules={registerRules.rules(t).password}\r\n                render={({ field: { value, onChange } }) => (\r\n                  <LocalTextField\r\n                    name={registerFields.password}\r\n                    onChange={onChange}\r\n                    value={value}\r\n                    className={classes.textfield}\r\n                    type={showPassword ? \"text\" : \"password\"}\r\n                    label=\"Repeat password\"\r\n                    endAdornment={\r\n                      <IconButton\r\n                        onClick={toggleShowPassword}\r\n                        style={{ color: \"inherit\", padding: 0 }}\r\n                      >\r\n                        {showPassword ? (\r\n                          <VisibilityRoundedIcon />\r\n                        ) : (\r\n                          <VisibilityOffRoundedIcon />\r\n                        )}\r\n                      </IconButton>\r\n                    }\r\n                  />\r\n                )}\r\n              />\r\n\r\n              {errors.password && (\r\n                <FormHelperText className={classes.error} error>\r\n                  <ErrorIcon type=\"secondary\" />\r\n                  <span>{errors.password?.message}</span>\r\n                </FormHelperText>\r\n              )}\r\n            </div>\r\n            <div className={classes.wrapper}>\r\n              <Controller\r\n                defaultValue=\"\"\r\n                name={registerFields.phone}\r\n                render={({ field: { value, onChange } }) => (\r\n                  <LocalTextField\r\n                    name={registerFields.phone}\r\n                    onChange={onChange}\r\n                    value={value}\r\n                    className={classes.textfield}\r\n                    label=\"Phone number\"\r\n                    endAdornment={<PhoneIcon />}\r\n                  />\r\n                )}\r\n              />\r\n            </div>\r\n            <MainButton text=\"Register\" type=\"primary\" onClick={handleSubmit} />\r\n          </Grid>\r\n          <Grid item md={6}>\r\n            <img src={registerImage} className={classes.image} alt=\"\" />\r\n          </Grid>\r\n        </Grid>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles({\r\n  error: {},\r\n  root: {\r\n    position: \"fixed\",\r\n    top: 0,\r\n    backgroundImage: `url(${images.yellowBackground})`,\r\n    backgroundRepeat: \"no-repeat\",\r\n    backgroundPosition: \"center\",\r\n    backgroundSize: \"cover\",\r\n    height: \"100%\",\r\n    width: \"100%\",\r\n    overflow: \"auto\",\r\n    verticalAlign: \"center\",\r\n  },\r\n  title: {\r\n    color: colors.darkBlueGrey,\r\n    paddingBottom: \"60px\",\r\n    paddingTop: \"20px\",\r\n  },\r\n  content: {\r\n    backgroundColor: \"white\",\r\n    textAlign: \"center\",\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n    borderRadius: \"0 0 5px 5px\",\r\n    boxShadow: \"5px 5px 20px 5px rgba(0,0,0,0.5)\",\r\n  },\r\n  firstNameWrapper: {\r\n    textAlign: \"center\",\r\n    width: \"60%\",\r\n    paddingTop: \"50px\",\r\n    display: \"inline-flex\",\r\n    paddingBottom: \"30px\",\r\n  },\r\n  nameErrors: {\r\n    width: \"60%\",\r\n    display: \"inline-flex\",\r\n  },\r\n  firstName: {\r\n    marginRight: \"5px\",\r\n  },\r\n  textfield: {\r\n    width: \"60%\",\r\n  },\r\n  image: {\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n  },\r\n  wrapper: {\r\n    paddingBottom: \"30px\",\r\n  },\r\n});\r\nexport default RegisterScreen;\r\n","import React from \"react\";\r\nimport { FormProvider, useForm } from \"react-hook-form\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { onTokenNotFound } from \"../helpers/auth\";\r\nimport { goToHomePage, goToLogin } from \"../helpers/navigation\";\r\nimport { showNotification } from \"../redux/notification/notificationRedux\";\r\nimport { RootState } from \"../redux/store\";\r\nimport RegisterScreen from \"../screens/RegisterScreen\";\r\nimport service from \"../service/service\";\r\nimport { User } from \"../types/User\";\r\n\r\nexport type RegisterData = {\r\n  email: string;\r\n  password: string;\r\n  username: string;\r\n  firstName: string;\r\n  lastName: string;\r\n  phone?: string;\r\n};\r\n\r\nexport const registerFields = {\r\n  email: \"email\",\r\n  password: \"password\",\r\n  username: \"username\",\r\n  firstName: \"firstName\",\r\n  lastName: \"lastName\",\r\n  phone: \"phone\",\r\n};\r\n\r\nconst RegisterContainer = () => {\r\n  const user = useSelector((state: RootState) => state.auth.user);\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n  const formMethods = useForm<RegisterData>();\r\n\r\n  React.useEffect(() => {\r\n    if (user) goToHomePage(history);\r\n  }, [user, history]);\r\n\r\n  const onSubmit = React.useCallback(\r\n    async (data: RegisterData) => {\r\n      try {\r\n        const user: User = {\r\n          email: data.email,\r\n          username: data.username,\r\n          firstName: data.firstName,\r\n          lastName: data.lastName,\r\n          phone: data.phone,\r\n        };\r\n        await service\r\n          .register(user, data.password)\r\n          .then(() => {\r\n            dispatch(\r\n              showNotification({\r\n                message: \"Register successful. Please log in now.\",\r\n                color: \"white\",\r\n                backgroundColor: \"green\",\r\n              })\r\n            );\r\n            goToLogin(history);\r\n          })\r\n          .catch((err) => console.log(err));\r\n      } catch (e) {\r\n        onTokenNotFound(dispatch);\r\n      }\r\n    },\r\n    [dispatch, history]\r\n  );\r\n\r\n  return (\r\n    <FormProvider {...formMethods}>\r\n      <RegisterScreen handleSubmit={formMethods.handleSubmit(onSubmit)} />\r\n    </FormProvider>\r\n  );\r\n};\r\n\r\nexport default RegisterContainer;\r\n","import React from \"react\";\r\nimport { Box, makeStyles, TextField } from \"@material-ui/core\";\r\nimport { Controller, useFormContext } from \"react-hook-form\";\r\n\r\ninterface Props {\r\n  cellValue: number;\r\n  disabled: boolean;\r\n  cellError: boolean;\r\n  name: string;\r\n  cellKey: string;\r\n  onCellChange: (value: number) => void;\r\n}\r\n\r\nconst SudokuCell = ({\r\n  cellValue,\r\n  disabled,\r\n  name,\r\n  cellError,\r\n  cellKey,\r\n  onCellChange,\r\n}: Props) => {\r\n  const classes = useStyles({ error: cellError });\r\n  const { control } = useFormContext();\r\n\r\n  return (\r\n    <Box className={classes.square} key={cellKey}>\r\n      <Controller\r\n        name={name}\r\n        control={control}\r\n        defaultValue={cellValue === 0 ? \"\" : cellValue}\r\n        render={({ field: { value, onChange } }) => (\r\n          <TextField\r\n            disabled={disabled}\r\n            value={cellValue === 0 ? \"\" : value}\r\n            inputProps={{ maxLength: 1 }}\r\n            InputProps={{\r\n              disableUnderline: true,\r\n              classes: {\r\n                input: classes.text,\r\n                focused: classes.focused,\r\n              },\r\n            }}\r\n            onChange={(e) => {\r\n              onChange(e);\r\n              onCellChange(parseInt(e.target.value));\r\n            }}\r\n            onFocus={(e) => {\r\n              e.target.select();\r\n            }}\r\n            className={classes.input}\r\n          />\r\n        )}\r\n      />\r\n    </Box>\r\n  );\r\n};\r\n\r\ninterface StyleProps {\r\n  error: boolean;\r\n}\r\n\r\nconst useStyles = makeStyles({\r\n  square: {\r\n    width: \"50px\",\r\n    height: \"50px\",\r\n    position: \"relative\",\r\n    display: \"flex\",\r\n    textAlignLast: \"center\",\r\n    border: \"1px solid black\",\r\n    boxSizing: \"content-box\",\r\n    \"&:hover\": {\r\n      backgroundColor: \"grey\",\r\n    },\r\n  },\r\n  input: (props: StyleProps) => ({\r\n    backgroundColor: props.error ? \"#EF5350\" : undefined,\r\n    caretColor: \"transparent\",\r\n  }),\r\n  text: {\r\n    height: \"100%\",\r\n    textAlign: \"center\",\r\n    fontSize: \"1.5rem\",\r\n    cursor: \"pointer\",\r\n    \"&::selection\": {\r\n      backgroundColor: \"transparent\",\r\n    },\r\n  },\r\n  focused: {\r\n    backgroundColor: \"blue\",\r\n  },\r\n});\r\n\r\nexport default SudokuCell;\r\n","import React from \"react\";\r\nimport { Box, makeStyles } from \"@material-ui/core\";\r\nimport SudokuCell from \"./SudokuCell\";\r\nimport { SudokuTypeProps } from \"../constants/sudokuTypes\";\r\n\r\ninterface Props {\r\n  data: CellProps[][];\r\n  index: number;\r\n  type: SudokuTypeProps;\r\n  onCellChange: (cellIndex: number, value: number) => void;\r\n}\r\n\r\nexport interface CellProps {\r\n  value: number;\r\n  disabled: boolean;\r\n  error: boolean;\r\n}\r\n\r\nconst SudokuBox = ({ data, index, type, onCellChange }: Props) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <Box className={classes.box}>\r\n      {data.map((item, boxRow) => (\r\n        <div style={{ display: \"flex\" }} key={`cellRow-${boxRow}`}>\r\n          {item.map((cell, boxCol) => (\r\n            <SudokuCell\r\n              cellValue={cell.value}\r\n              disabled={cell.disabled}\r\n              cellError={cell.error}\r\n              cellKey={`${index}-${boxRow}-${boxCol}`}\r\n              key={`${index}-${boxRow}-${boxCol}`}\r\n              name={`${index}-${boxRow}-${boxCol}`}\r\n              onCellChange={(value: number) => {\r\n                onCellChange(\r\n                  (Math.floor(index / type.boxRows) * type.boxRows + boxRow) *\r\n                    type.size +\r\n                    ((index % type.boxRows) * type.boxColumns + boxCol),\r\n                  value\r\n                );\r\n              }}\r\n            />\r\n          ))}\r\n        </div>\r\n      ))}\r\n    </Box>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles({\r\n  box: {\r\n    marginLeft: \"1px\",\r\n    marginRight: \"1px\",\r\n    marginTop: \"2px\",\r\n  },\r\n});\r\n\r\nexport default SudokuBox;\r\n","import { Box, makeStyles } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport { SudokuTypeProps } from \"../constants/sudokuTypes\";\r\nimport SudokuBox, { CellProps } from \"./SudokuBox\";\r\n\r\ninterface Props {\r\n  data: CellProps[][];\r\n  type: SudokuTypeProps;\r\n  onCellChange: (cellIndex: number, value: number) => void;\r\n}\r\n\r\nconst SudokuGrid = ({ data, type, onCellChange }: Props) => {\r\n  const classes = useStyles();\r\n\r\n  const boxData = React.useMemo(() => {\r\n    return [...Array(type.size).keys()].map((item) => {\r\n      const start = Math.floor(item / type.boxRows) * type.boxRows;\r\n      const start2 = (item % type.boxRows) * type.boxColumns;\r\n      return data\r\n        .slice(start, start + type.boxRows)\r\n        .map((i) => i.slice(start2, start2 + type.boxColumns));\r\n    });\r\n  }, [data, type.boxColumns, type.boxRows, type.size]);\r\n\r\n  const rows = React.useMemo(\r\n    () =>\r\n      boxData.map((box, index) => {\r\n        return (\r\n          <div\r\n            className={\r\n              type.breaks.includes(index) ? classes.clear : classes.left\r\n            }\r\n            key={`box-${index}`}\r\n          >\r\n            <SudokuBox\r\n              data={box}\r\n              index={index}\r\n              type={type}\r\n              onCellChange={(cellIndex: number, value: number) =>\r\n                onCellChange(cellIndex, value)\r\n              }\r\n              key={index}\r\n            />\r\n          </div>\r\n        );\r\n      }),\r\n    [boxData, onCellChange, type.breaks, classes.left, classes.clear]\r\n  );\r\n\r\n  return <Box>{rows}</Box>;\r\n};\r\n\r\nconst useStyles = makeStyles({\r\n  left: {\r\n    float: \"left\",\r\n  },\r\n  clear: {\r\n    clear: \"left\",\r\n    float: \"left\",\r\n  },\r\n});\r\n\r\nexport default SudokuGrid;\r\n","export const SudokuGridType = {\r\n  STANDARD: \"STANDARD\",\r\n};\r\nexport interface SudokuTypeProps {\r\n  name: string;\r\n  boxRows: number;\r\n  boxColumns: number;\r\n  size: number;\r\n  breaks: number[];\r\n}\r\n\r\nexport interface SudokuTypeInterface {\r\n  [key: string]: SudokuTypeProps;\r\n}\r\n\r\nexport const sudokuType: SudokuTypeInterface = {\r\n  small: {\r\n    name: \"6x6\",\r\n    size: 6,\r\n    boxColumns: 3,\r\n    boxRows: 2,\r\n    breaks: [2, 4],\r\n  },\r\n  standard: {\r\n    name: \"Standard\",\r\n    boxRows: 3,\r\n    boxColumns: 3,\r\n    size: 9,\r\n    breaks: [3, 6],\r\n  },\r\n  xSudoku: {\r\n    name: \"X-Sudoku\",\r\n    size: 9,\r\n    boxRows: 3,\r\n    boxColumns: 3,\r\n    breaks: [3, 6],\r\n  },\r\n};\r\n","import {\r\n  Box,\r\n  FormControl,\r\n  Grid,\r\n  makeStyles,\r\n  MenuItem,\r\n  Select,\r\n} from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport MainButton from \"../components/MainButton\";\r\nimport { CellProps } from \"../components/SudokuBox\";\r\nimport SudokuGrid from \"../components/SudokuGrid\";\r\nimport { sudokuType, SudokuTypeProps } from \"../constants/sudokuTypes\";\r\n\r\ninterface Props {\r\n  data: CellProps[][];\r\n  sudokuTypeName: string;\r\n  type: SudokuTypeProps;\r\n  onCellChange: (cellIndex: number, value: number) => void;\r\n  onTypeChange: (event: React.ChangeEvent<{ value: unknown }>) => void;\r\n  onCheckUnique: () => void;\r\n}\r\n\r\nconst NewSudokuScreen = ({\r\n  data,\r\n  sudokuTypeName,\r\n  type,\r\n  onCellChange,\r\n  onTypeChange,\r\n  onCheckUnique,\r\n}: Props) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Box py={5}>\r\n      <Grid container>\r\n        <Grid item md={6} style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n          <SudokuGrid data={data} type={type} onCellChange={onCellChange} />\r\n        </Grid>\r\n        <Grid item md={1}></Grid>\r\n        <Grid item md={5}>\r\n          <FormControl variant=\"outlined\">\r\n            <div>Sudoku type</div>\r\n            <Select value={sudokuTypeName} onChange={onTypeChange}>\r\n              {Object.values(sudokuType).map((item) => (\r\n                <MenuItem key={item.name} value={item.name}>\r\n                  {item.name}\r\n                </MenuItem>\r\n              ))}\r\n            </Select>\r\n          </FormControl>\r\n          <div className={classes.button}>\r\n            <MainButton\r\n              text=\"Check for unique solution\"\r\n              onClick={onCheckUnique}\r\n            />\r\n          </div>\r\n        </Grid>\r\n      </Grid>\r\n    </Box>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles({\r\n  button: {\r\n    paddingTop: 20,\r\n  },\r\n});\r\n\r\nexport default NewSudokuScreen;\r\n","import { CellProps } from \"../components/SudokuBox\";\r\nimport { SudokuTypeProps } from \"../constants/sudokuTypes\";\r\n\r\nexport const checkForConstraints = (\r\n  grid: CellProps[][],\r\n  rowIndex: number,\r\n  columnIndex: number,\r\n  sudokuType: SudokuTypeProps,\r\n  value: number\r\n) => {\r\n  return (\r\n    checkRow(grid, value, rowIndex) &&\r\n    checkColumn(grid, value, columnIndex) &&\r\n    checkBox(grid, value, rowIndex, columnIndex, sudokuType)\r\n  );\r\n};\r\n\r\nexport const checkRow = (\r\n  grid: CellProps[][],\r\n  value: number,\r\n  rowIndex: number\r\n) => grid[rowIndex].every((item) => item.value !== value);\r\n\r\nexport const checkColumn = (\r\n  grid: CellProps[][],\r\n  value: number,\r\n  columnIndex: number\r\n) => {\r\n  return grid.every((item) => item[columnIndex].value !== value);\r\n};\r\n\r\nexport const checkBox = (\r\n  grid: CellProps[][],\r\n  value: number,\r\n  row: number,\r\n  column: number,\r\n  sudokuType: SudokuTypeProps\r\n) => {\r\n  const boxStartRow = Math.floor(row / sudokuType.boxRows) * sudokuType.boxRows;\r\n  const boxStartColumn =\r\n    Math.floor(column / sudokuType.boxColumns) * sudokuType.boxColumns;\r\n  const box = grid\r\n    .slice(boxStartRow, boxStartRow + sudokuType.boxRows)\r\n    .map((item) => {\r\n      return item.slice(boxStartColumn, boxStartColumn + sudokuType.boxColumns);\r\n    });\r\n  return box.every((item) => item.every((x) => x.value !== value));\r\n};\r\n\r\nexport const rowFromIndex = (index: number, gridSize: number) =>\r\n  Math.floor(index / gridSize);\r\n\r\nexport const columnFromIndex = (index: number, gridSize: number) =>\r\n  index % gridSize;\r\n","import { CellProps } from \"../components/SudokuBox\";\r\nimport { sudokuType, SudokuTypeProps } from \"../constants/sudokuTypes\";\r\nimport { checkForConstraints } from \"./sudokuConstraints\";\r\n\r\nexport const generateEmptyGrid = (\r\n  sudokuType: SudokuTypeProps\r\n): CellProps[][] => {\r\n  return Array(sudokuType.size)\r\n    .fill(0)\r\n    .map(() =>\r\n      Array(sudokuType.size).fill({ value: 0, error: false, disabled: false })\r\n    );\r\n};\r\n\r\nexport function solveSudoku(board: CellProps[][], type: SudokuTypeProps) {\r\n  let gridFilled = true;\r\n  let row = -1;\r\n  let col = -1;\r\n  const emptyPlace = board.flat().findIndex((item) => item.value === 0);\r\n\r\n  if (emptyPlace !== -1) {\r\n    row = Math.floor(emptyPlace / type.size);\r\n    col = emptyPlace % type.size;\r\n    gridFilled = false;\r\n  }\r\n\r\n  if (gridFilled) {\r\n    return true;\r\n  }\r\n\r\n  const numbers = Array.from({ length: type.size }, (_, i) => i + 1);\r\n\r\n  for (const number of numbers) {\r\n    if (checkForConstraints(board, row, col, type, number)) {\r\n      board[row][col].value = number;\r\n      if (solveSudoku(board, type)) {\r\n        return true;\r\n      } else {\r\n        board[row][col].value = 0;\r\n      }\r\n    }\r\n  }\r\n  return false;\r\n}\r\n\r\nexport function isUnique(\r\n  board: CellProps[][],\r\n  count: number,\r\n  type: SudokuTypeProps,\r\n  row: number,\r\n  col: number\r\n): number {\r\n  if (row === type.size) {\r\n    row = 0;\r\n    if (++col === type.size) return 1 + count;\r\n  }\r\n\r\n  if (board[row][col].value !== 0)\r\n    return isUnique(board, count, type, row + 1, col);\r\n\r\n  const numbers = Array.from({ length: type.size }, (_, i) => i + 1);\r\n\r\n  for (const number of numbers) {\r\n    if (checkForConstraints(board, row, col, type, number)) {\r\n      board[row][col].value = number;\r\n      count = isUnique(board, count, type, row + 1, col);\r\n    }\r\n  }\r\n  board[row][col].value = 0;\r\n  return count;\r\n}\r\n\r\nexport function solve(board: CellProps[][], n: number) {\r\n  let row = -1;\r\n  let col = -1;\r\n  let isEmpty = true;\r\n  for (let i = 0; i < n; i++) {\r\n    for (let j = 0; j < n; j++) {\r\n      if (board[i][j].value === 0) {\r\n        row = i;\r\n        col = j;\r\n\r\n        // We still have some remaining\r\n        // missing values in Sudoku\r\n        isEmpty = false;\r\n        break;\r\n      }\r\n    }\r\n    if (!isEmpty) {\r\n      break;\r\n    }\r\n  }\r\n\r\n  // No empty space left\r\n  if (isEmpty) {\r\n    return true;\r\n  }\r\n\r\n  // Else for each-row backtrack\r\n  for (let num = 1; num <= n; num++) {\r\n    if (checkForConstraints(board, row, col, sudokuType.standard, num)) {\r\n      board[row][col].value = num;\r\n      if (solve(board, n)) {\r\n        return true;\r\n      } else {\r\n        // Replace it\r\n        board[row][col].value = 0;\r\n      }\r\n    }\r\n  }\r\n  return false;\r\n}\r\n","import React from \"react\";\r\nimport NewSudokuScreen from \"../screens/NewSudokuScreen\";\r\nimport { sudokuType, SudokuTypeProps } from \"../constants/sudokuTypes\";\r\nimport {\r\n  checkForConstraints,\r\n  columnFromIndex,\r\n  rowFromIndex,\r\n} from \"../helpers/sudokuConstraints\";\r\nimport { CellProps } from \"../components/SudokuBox\";\r\nimport { FormProvider, useForm } from \"react-hook-form\";\r\nimport { generateEmptyGrid, isUnique, solveSudoku } from \"../helpers/game\";\r\n\r\nconst NewSudokuContainer = () => {\r\n  // ima li grešaka u gridu -> data.some((item) => item.find((x) => x.error))\r\n\r\n  const [data, setData] = React.useState<CellProps[][]>([]);\r\n  const formMethods = useForm();\r\n\r\n  const [sudokuTypeName, setSudokuTypeName] = React.useState<string>(\r\n    sudokuType.standard.name\r\n  );\r\n  const [type, setType] = React.useState<SudokuTypeProps>(sudokuType.standard);\r\n\r\n  const errors = React.useMemo(\r\n    () => data.some((item) => item.find((x) => x.error)),\r\n    [data]\r\n  );\r\n\r\n  React.useEffect(() => {\r\n    const newType = Object.values(sudokuType).find(\r\n      (item) => item.name === sudokuTypeName\r\n    );\r\n    if (newType) {\r\n      setType(newType);\r\n      setData(generateEmptyGrid(newType));\r\n    }\r\n  }, [sudokuTypeName]);\r\n\r\n  const onTypeChange = React.useCallback(\r\n    (event: React.ChangeEvent<{ value: unknown }>) => {\r\n      setSudokuTypeName(event.target.value as string);\r\n    },\r\n    []\r\n  );\r\n\r\n  const onCellChange = React.useCallback(\r\n    (cellIndex: number, value: number) => {\r\n      const copy = [...data];\r\n      const row = rowFromIndex(cellIndex, type.size);\r\n      const column = columnFromIndex(cellIndex, type.size);\r\n\r\n      const error = !checkForConstraints(data, row, column, type, value);\r\n\r\n      copy[row][column] = { value: value, error: error, disabled: false };\r\n      setData(copy);\r\n    },\r\n    [data, type]\r\n  );\r\n\r\n  const onCheckUnique = React.useCallback(() => {\r\n    const copy = data.map((a) => a.map((item) => ({ ...item })));\r\n    const copy2 = data.map((a) => a.map((item) => ({ ...item })));\r\n    console.log(isUnique(copy, 0, type, 0, 0));\r\n    if (solveSudoku(copy, type)) {\r\n      console.log(copy);\r\n    } else console.log(\"no solution sorrey\");\r\n  }, [data, type.size]);\r\n\r\n  return (\r\n    <FormProvider {...formMethods}>\r\n      <NewSudokuScreen\r\n        data={data}\r\n        sudokuTypeName={sudokuTypeName}\r\n        type={type}\r\n        onCellChange={onCellChange}\r\n        onTypeChange={onTypeChange}\r\n        onCheckUnique={onCheckUnique}\r\n      />\r\n    </FormProvider>\r\n  );\r\n};\r\n\r\nexport default NewSudokuContainer;\r\n","import React from \"react\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Redirect,\r\n} from \"react-router-dom\";\r\nimport StartContainer from \"../containers/StartContainer\";\r\nimport LoginContainer from \"../containers/LoginContainer\";\r\nimport HomeContainer from \"../containers/HomeContainer\";\r\nimport RegisterContainer from \"../containers/RegisterContainer\";\r\nimport { RouteNames } from \"./routes\";\r\nimport NewSudokuContainer from \"../containers/NewSudokuContainer\";\r\n\r\nconst MainRouter = () => {\r\n  return (\r\n    <Router>\r\n      <Switch>\r\n        <Route strict={true} exact={true} path={RouteNames.Start}>\r\n          <StartContainer />\r\n        </Route>\r\n        <Route strict={true} exact={true} path={RouteNames.Login}>\r\n          <LoginContainer />\r\n        </Route>\r\n        <Route exact={true} strict={true} path={RouteNames.Home}>\r\n          <HomeContainer />\r\n        </Route>\r\n        <Route strict={true} exact={true} path={RouteNames.Register}>\r\n          <RegisterContainer />\r\n        </Route>\r\n        <Route strict={true} exact={true} path={RouteNames.New}>\r\n          <NewSudokuContainer />\r\n        </Route>\r\n        <Redirect to={RouteNames.Start} />\r\n      </Switch>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default MainRouter;\r\n","import React from \"react\";\r\nimport { makeStyles, Snackbar } from \"@material-ui/core\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { RootState } from \"../redux/store\";\r\nimport { hideNotification } from \"../redux/notification/notificationRedux\";\r\n\r\nconst Notification = () => {\r\n  const dispatch = useDispatch();\r\n  const notification = useSelector((state: RootState) => state.notification);\r\n  const classes = useStyles({\r\n    color: notification.notification.color,\r\n    backgroundColor: notification.notification.backgroundColor,\r\n  });\r\n\r\n  const handleClose = React.useCallback(() => {\r\n    dispatch(hideNotification());\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <Snackbar\r\n      autoHideDuration={3000}\r\n      open={notification.shown}\r\n      onClose={handleClose}\r\n      message={notification.notification.message}\r\n      ContentProps={{\r\n        className: classes.notification,\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\ninterface StyleProps {\r\n  color: string;\r\n  backgroundColor: string;\r\n}\r\n\r\nconst useStyles = makeStyles({\r\n  notification: (props: StyleProps) => ({\r\n    color: props.color,\r\n    backgroundColor: props.backgroundColor,\r\n  }),\r\n});\r\n\r\nexport default Notification;\r\n","import React from \"react\";\r\nimport { ACCESS_TOKEN } from \"../constants/auth\";\r\nimport MainRouter from \"../routes/MainRouter\";\r\nimport Notification from \"../components/Notification\";\r\nimport { setHeaders } from \"../service/axios\";\r\nimport service from \"../service/service\";\r\n\r\nconst AuthenticationWrapper = () => {\r\n  const [loading, setLoading] = React.useState<boolean>(false);\r\n\r\n  React.useEffect(() => {\r\n    const at = localStorage.getItem(ACCESS_TOKEN);\r\n    if (at) {\r\n      setHeaders(at);\r\n      service\r\n        .checkToken()\r\n        .then(() => {\r\n          setLoading(false);\r\n        })\r\n        .catch((e) => {\r\n          setHeaders(\"\");\r\n          setLoading(false);\r\n        });\r\n    } else {\r\n      setLoading(false);\r\n    }\r\n  }, []);\r\n  if (loading) return null;\r\n  return (\r\n    <>\r\n      <MainRouter />\r\n      <Notification />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AuthenticationWrapper;\r\n","import React from \"react\";\r\nimport { Box, CircularProgress, makeStyles } from \"@material-ui/core\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { RootState } from \"../redux/store\";\r\nimport colors from \"../constants/colors\";\r\n\r\nconst LoadingWrapper = ({ children }: any) => {\r\n  const loading = useSelector((state: RootState) => state.loading);\r\n  const classes = useClasses();\r\n\r\n  const isLoading = React.useMemo(() => Object.keys(loading), [loading]);\r\n  return (\r\n    <Box>\r\n      <Box\r\n        className={isLoading.length !== 0 ? classes.loading : classes.hidden}\r\n      >\r\n        <CircularProgress className={classes.spinner} />\r\n      </Box>\r\n      {children}\r\n    </Box>\r\n  );\r\n};\r\n\r\nconst useClasses = makeStyles({\r\n  loading: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    position: \"fixed\",\r\n    width: \"auto\",\r\n    height: \"auto\",\r\n    top: 0,\r\n    left: 0,\r\n    right: 0,\r\n    bottom: 0,\r\n    zIndex: 1000,\r\n    backgroundColor: \"rgba(0,0,0,0.1)\",\r\n  },\r\n  hidden: {\r\n    display: \"none\",\r\n  },\r\n  spinner: {\r\n    color: colors.black,\r\n  },\r\n});\r\n\r\nexport default LoadingWrapper;\r\n","import React from \"react\";\nimport { Provider } from \"react-redux\";\nimport \"./App.css\";\nimport { CssBaseline, ThemeProvider } from \"@material-ui/core\";\nimport mainTheme from \"./constants/mainTheme\";\nimport AuthenticationWrapper from \"./wrappers/AuthenticationWrapper\";\nimport store from \"./redux/store\";\nimport LoadingWrapper from \"./wrappers/LoadingWrapper\";\n\nconst App = () => {\n  return (\n    <Provider store={store}>\n      <ThemeProvider theme={mainTheme}>\n        <CssBaseline />\n        <LoadingWrapper>\n          <AuthenticationWrapper />\n        </LoadingWrapper>\n      </ThemeProvider>\n    </Provider>\n  );\n};\n\nexport default App;\n","import i18n from \"i18next\";\r\nimport { initReactI18next } from \"react-i18next\";\r\nimport translations from \"./translations.json\";\r\n\r\ni18n.use(initReactI18next).init({\r\n  resources: translations,\r\n  lng: \"en\",\r\n  keySeparator: false,\r\n  interpolation: {\r\n    escapeValue: false,\r\n  },\r\n});\r\n\r\nexport default i18n;\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport \"./i18n\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}